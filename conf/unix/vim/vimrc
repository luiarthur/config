set nocompatible              " be iMproved, required
filetype off                  " required

" Sets line numbers on the side
set number


" Get location of $MYVIMRC (either ~/.vimrc or ~/.vim/vimrc)
let vimrcDir = fnamemodify($MYVIMRC, ':h') . "/"

" Set my plugins directory
let myPluginsDir = vimrcDir . "my-plugins/"

" Add my Plugins
try
  for f in split(glob(myPluginsDir . "*"), '\n')
    exec 'source' f
  endfor
catch
endtry


"######## Begin Vundle STUFF ################################
" Vundle is used for installing vim plugins. I used this for go's syntax
" highligh installation.
" For Installation Deatils, see https://github.com/gmarik/Vundle.vim

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
  " Add plugins here, then install by opening vim and running
  " :PluginInstall
  Plugin 'gmarik/Vundle.vim'                " Vim
  Plugin 'tmux-plugins/vim-tmux'            " tmux
  Plugin 'godlygeek/tabular'                " Auto Indent
  Plugin 'plasticboy/vim-markdown'          " Markdown
  Plugin 'octol/vim-cpp-enhanced-highlight' " C++
  Plugin 'derekwyatt/vim-scala'             " Scala
  Plugin 'JuliaEditorSupport/julia-vim'     " julia
  Plugin 'fatih/vim-go'                     " Go-lang
  Plugin 'luiarthur/kotlin-vim'             " Kotlin
  Plugin 'tfnico/vim-gradle'                " Gradle
  "Plugin 'vim-pandoc/vim-pandoc-syntax'    " pandoc
  "Plugin 'vim-pandoc/vim-pandoc'           " pandoc
  "set nofoldenable    " disable folding
call vundle#end()            " required
filetype plugin indent on    " required
"########End of Vundle STUFF###############################

" Basic stuff
syntax enable               " Syntax highlighting
set hlsearch                " Highlight search items
set incsearch               " Highlight search items as you type
set showmatch               " Show matches for parenthesis, etc.
set expandtab               " Use softtabs
set tabstop=2 shiftwidth=2  " Set tab width
set background=light        " Assume a light background (dark is the other option)
set autoindent
set clipboard=unnamed


" Return to last position
set viminfo='100,\"100,:20,%,n~/.viminfo
au BufReadPost * if line("'\"") > 0|if line("'\"") <= line("$")|exe("norm '\"")|else|exe "norm $"|endif|endif 


" Keep text in visual mode when indenting or unindenting.
" Every time I hit < automatically do <gv
vmap < <gv  
vmap > >gv
vmap <s-tab> <gv
vmap <tab> >gv

" Intelligent tab completion
function! InsertTabWrapper(direction)
  let col = col('.') - 1
  if !col || getline('.')[col - 1] !~ '\k'
    return "\<tab>"
  elseif "backward" == a:direction
    return "\<c-p>"
  else
    return "\<c-n>"
  endif
endfunction
inoremap <tab> <c-r>=InsertTabWrapper ("forward")<cr>
inoremap <s-tab> <c-r>=InsertTabWrapper ("backward")<cr>

" Execute a command from a shell
function ExecuteShellCommand(...)
  let cmd = ''
  let i = 1
  while i <= a:0
    let cmd = cmd . a:{i} . ' '
    let i = i + 1
  endwhile
  silent execute '!' . cmd
  redraw!
endfunction
command -nargs=+ E :call ExecuteShellCommand(<f-args>)

" Keybinding for word wrap
nnoremap <C-x> gqap

" Move between tabs --- Does not work within tmux.
nnoremap <silent> <A-Right> :tabnext<CR>
nnoremap <silent> <A-Left> :tabprevious<CR>

" Switch to hex-editor
noremap <F8> :%!xxd<CR>
" Switch back
noremap <F7> :%!xxd -r<CR>
" disable F1 for help
nmap <F1> <nop>

" Toggle folding with F9. 
set foldmethod=manual " enables folding by visual selection select
inoremap <F9> <C-O>za
nnoremap <F9> za
onoremap <F9> <C-C>za
vnoremap <F9> zf


" Copy and paste between sessions
" Copy the current visual selection to ~/.vbuf
vmap <C-S-u> :w! xsel<CR> " copy the current visual selection to X11 clipboard using "xsel"
vmap <C-S-y> "+y<CR>      " copy the current visual selection to ~/.vbuf
nmap <C-S-p> "+p<CR>      " paste the contents of the buffer file
" For servers, replace the above few lines with these below:
"vmap <C-S-u> :w ! xsel<CR>
"vmap <C-S-y> :w! ~/.vbuf<CR>     " copy the current visual selection to ~/.vbuf
"nmap <C-S-p> :r ~/.vbuf<CR>      " paste the contents of the buffer file

" set colorscheme to redmagick
colorscheme redmagick

