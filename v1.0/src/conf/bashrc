#!/bin/bash

#############
### Alias ###
#############

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
    alias rgrep='rgrep --color=auto'
fi

# some more ls aliases
alias ll='ls -alFh'
alias la='ls -A'
alias l='ls -CF'

# Commands for not overwriting files
alias mv="/bin/mv -i"
alias cp="/bin/cp -i"
alias rm="/bin/rm -i"
alias crontab="/usr/bin/crontab -i"

# Utilities
alias dir="ls -hla "
alias taro="tar -zxf"
alias tma="tmux attach -t"
alias s="aspell --lang=en_GB -t -c"
alias chrome="google-chrome"
alias vi="nvim"

# Print pretty git log. see: https://git-scm.com/docs/pretty-formats or `man
# git-log`.
# %h:  abbreviated commit hash
# %ad: author date
# %s:  subject line
alias gitlog='git log --pretty="%ad %C(yellow)%h%Creset %C(cyan bold)%d%Creset %s" --date=short -20'


################
### Terminal ###
################

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
# shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# Enable extended pattern matching (globbing).
shopt -s extglob

# Prevent echo "abc" > existing_file.txt to be overwritten.
set -o noclobber

# 256 color support.
export TERM=xterm-256color

# Set-up prompt
PS1="\h:\W$ "
source ~/.git-prompt.sh 2> /dev/null

# Editor
export EDITOR=nvim
bind -m vi-insert "\C-l":clear-screen  # Enable ctrl-l for clear screen.

###############
### History ###
###############

# Don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

############
### PATH ###
############

# PATH definitions.
export PATH=~/bin:$PATH
export PATH=~/local/bin:$PATH
export PATH=~/.local/bin:$PATH

# Usual stuff.
export TEXMFHOME=~/.texmf  # latex
export R_HISTFILE=~/.Rhistory  # r
export PYTHONSTARTUP=~/.pythonrc  # python

# Julia
# export JULIA_HOME=""  # path to `julia-vX.Y.Z/`
# export JULIA_DEPOT_PATH=""  # path to `.julia/` [optional]
# export PATH=JULIA_HOME/bin:$PATH

############
### misc ###
############

# Makefile completion (uncomment if needed).
# complete -W "\`grep -oE '^[a-zA-Z0-9_.-]+:([^=]|$)' ?akefile | sed 's/[^a-zA-Z0-9_.-]*$//'\`" make
